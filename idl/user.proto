syntax = "proto3";
package user; // 本身的模块名
option go_package = "user"; // 生成代码时的上层目录

// 数据模型
message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  int32 follow_count = 3; // 关注总数
  int32 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  int32 work_count = 6; // 作品数
  string background_image = 7; //用户个人页顶部大图
  string signature = 8; //个人简介
  int64 total_favorite = 9; //获赞数量
  int32 favorite_count = 10; // 用户点赞作品数
  string avatar = 11; // 用户头像
}

// 用户信息
message UserInfoRequest {
  int64 user_id = 1; // 用户id
  int64 my_id = 2; // 登录的用户id
}
message UserInfoResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  User user = 3; // 用户信息
}

// 用户登录
message UserLoginRequest {
  string username = 1; // 登录用户名
  string password = 2; // 登录密码
}
message UserLoginResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}

// 用户注册
message UserRegisterRequest {
   string username = 1; // 注册用户名，最长32个字符
   string password = 2; // 密码，最长32个字符
}
message UserRegisterResponse {
   int32 status_code = 1; // 状态码，0-成功，其他值-失败
   string status_msg = 2; // 返回状态描述
   int64  user_id = 3; // 用户id
   string token = 4; // 用户鉴权token
}

// 获取用户头像
message UserAvatarRequest {
  int64 user_id = 1;
}
message UserAvatarResponse {
  string avatar = 1;
}

// 获取顶部大图
message UserBackgroundImageRequest {
  int64 user_id = 1;
}
message UserBackgroundImageResponse {
  string background_image = 1;
}

// 服务注册
service UserService {
  rpc UserInfo (UserInfoRequest) returns (UserInfoResponse) {}
  rpc UserLogin (UserLoginRequest) returns (UserLoginResponse) {}
  rpc UserRegister (UserRegisterRequest) returns (UserRegisterResponse) {}
  rpc GetAvatar (UserAvatarRequest) returns (UserAvatarResponse) {}
  rpc GetBackgroundImage (UserBackgroundImageRequest) returns (UserBackgroundImageResponse) {}
}

