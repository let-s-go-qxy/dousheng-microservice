syntax = "proto3";
package message;
option go_package = "message";



message MessageChatRequest {
  int64 user_id = 1;
  int64 to_user_id = 2; // 对方用户id
}

message MessageChatResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated Message message_list = 3; // 消息列表
}

message Message {
  int64 id = 1; // 消息id
  int64 to_id = 2; // 该消息接收者的id
  int64 from_id =3; // 该消息发送者的id
  string content = 4; // 消息内容
  string create_time = 5; // 消息创建时间
}

message MessageActionRequest {
  int64 user_id = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message MessageActionResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

// 获取最后一次聊天记录，model 层 my_id -> user_id 和 user_id 到 my_id 都得查一下
message MessageLastRequest {
  int64 my_id = 1;
  int64 user_id = 2;
}
message MessageLastResponse {
  string content = 1;
}

service MessageService {
  rpc GetMessageList (MessageChatRequest) returns (MessageChatResponse) {}
  rpc GetMessageListByDB (MessageChatRequest) returns (MessageChatResponse) {}
  rpc PostMessageAction (MessageActionRequest) returns (MessageActionResponse) {}
  rpc GetLatestMessage (MessageLastRequest) returns (MessageLastResponse) {}
}